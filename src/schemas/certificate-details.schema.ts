import mongoose from "mongoose";
const { Schema } = mongoose;

export const certificateDetailsSchema = new Schema({
  idCertificate: { type: Number, index: true, unique: true },
  idTechnicalReglaments: { type: Schema.Types.Mixed },
  idCertScheme: { type: Number },
  idObjectCertType: { type: Number },
  idCertType: { type: Number },
  isTs: { type: Boolean },
  idProductSingleLists: { type: Schema.Types.Mixed },
  awaitForApprove: { type: Boolean },
  idStatus: { type: Number },
  expiredInspectionControl: { type: Boolean },
  editApp: { type: Boolean },
  assignRegNumber: { type: Boolean },
  number: { type: String },
  certRegDate: { type: String },
  certEndDate: { type: String },
  idBlank: { type: Number },
  blankNumber: { type: String },
  noSanction: { type: Boolean },
  batchInspection: { type: Boolean },
  inspectionControlPlanDate: { type: String },
  idSigner: { type: Number },
  idEmployee: { type: Number },
  firstName: { type: String },
  surname: { type: String },
  patronymic: { type: String },
  annexes: { type: Schema.Types.Mixed },
  applicant: { type: Schema.Types.Mixed },
  applicantFilials: { type: Schema.Types.Mixed },
  manufIsApplicant: { type: Boolean },
  manufacturer: { type: Schema.Types.Mixed },
  manufacturerFilials: { type: Schema.Types.Mixed },
  certificationAuthority: { type: Schema.Types.Mixed },
  product: { type: Schema.Types.Mixed },
  experts: { type: Schema.Types.Mixed },
  statusChanges: { type: Schema.Types.Mixed },
  testingLabs: { type: Schema.Types.Mixed },
  productGroups: { type: Schema.Types.Mixed },
  documents: { type: Schema.Types.Mixed },
  idFgisRaV1: { type: Schema.Types.Mixed },
  changes: { type: Schema.Types.Mixed },
  awaitOperatorCheck: { type: Schema.Types.Mixed },
  productInfoOon106: { type: Schema.Types.Mixed },
  productMatchOON106: { type: Schema.Types.Mixed },
  idDeclarationChecker: { type: Schema.Types.Mixed },
  idMrpa: { type: Schema.Types.Mixed },
  showInOpenPart: { type: Boolean },
});
