import mongoose from "mongoose";
const { Schema } = mongoose;

export const declarationDetailsSchema = new Schema({
  idDeclaration: { type: Number, index: true, unique: true },
  idTechnicalReglaments: { type: Schema.Types.Mixed },
  idDeclScheme: { type: Schema.Types.Mixed },
  idObjectDeclType: { type: Schema.Types.Mixed },
  idGroups: { type: Schema.Types.Mixed },
  idDeclType: { type: Schema.Types.Mixed },
  idProductSingleLists: { type: Schema.Types.Mixed },
  awaitForApprove: { type: Schema.Types.Mixed },
  editApp: { type: Schema.Types.Mixed },
  unpublishedChanges: { type: Schema.Types.Mixed },
  idStatus: { type: Schema.Types.Mixed },
  assignRegNumber: { type: Schema.Types.Mixed },
  number: { type: Schema.Types.Mixed },
  submissionDate: { type: Schema.Types.Mixed },
  declRegDate: { type: Schema.Types.Mixed },
  declEndDate: { type: Schema.Types.Mixed },
  noSanction: { type: Schema.Types.Mixed },
  lastUpdate: { type: Schema.Types.Mixed },
  idSigner: { type: Schema.Types.Mixed },
  idSignerEmployee: { type: Schema.Types.Mixed },
  firstName: { type: Schema.Types.Mixed },
  surname: { type: Schema.Types.Mixed },
  patronymic: { type: Schema.Types.Mixed },
  annexes: { type: Schema.Types.Mixed },
  applicant: { type: Schema.Types.Mixed },
  applicantFilials: { type: Schema.Types.Mixed },
  manufIsApplicant: { type: Schema.Types.Mixed },
  manufacturer: { type: Schema.Types.Mixed },
  manufacturerFilials: Schema.Types.Mixed,
  certificationAuthority: { type: Schema.Types.Mixed },
  accreditationBody: { type: Schema.Types.Mixed },
  product: { type: Schema.Types.Mixed },
  experts: { type: Schema.Types.Mixed },
  statusChanges: Schema.Types.Mixed,
  testingLabs: Schema.Types.Mixed,
  documents: { type: Schema.Types.Mixed },
  isSrd: { type: Schema.Types.Mixed },
  idStatusTestingLabs: { type: Schema.Types.Mixed },
  idReplacementReason: { type: Schema.Types.Mixed },
  idDeclarationReplaced: { type: Schema.Types.Mixed },
  idDeclarationRegInstead: { type: Schema.Types.Mixed },
  declarationReplacedNum: { type: Schema.Types.Mixed },
  declarationRegInsteadNum: { type: Schema.Types.Mixed },
  changes: { type: Schema.Types.Mixed },
  idDeclarationChecker: { type: Schema.Types.Mixed },
  showInOpenPart: { type: Schema.Types.Mixed },
  idMrpa: { type: Schema.Types.Mixed },
  declStage: { type: Schema.Types.Mixed },
});
